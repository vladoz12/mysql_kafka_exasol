version: '3'

services:

  # Exasol DB
  poc-exasol-db:
    image: exasol/docker-db:6.2.17-d1
    hostname: 'poc-exasol-db'
    container_name: poc-exasol-db
    privileged: true
    ports:
      - 9573:8888
    volumes:
      - $PWD/data/test:/test

  mysql-db:
    image: mysql
    container_name: mysql-db
    hostname: 'mysqldb_host'
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      MYSQL_DB_HOST: 127.0.0.1
      MYSQL_ROOT_PASSWORD: rootpass
      MYSQL_USER: dbuser
      MYSQL_PASSWORD: userpass
    ports:
      - 3306:3306

  setup:
    image: python:3.9
    hostname: 'setup'
    container_name: setup
    volumes:
      - type: bind
        source: ./
        target: /resources
    command: bash /resources/setup/setup.sh
    depends_on:
      kafka-connect:
        condition: service_healthy

  adminer:
    image: adminer
    container_name: adminer
    restart: always
    ports:
      - 1111:8080

  # Kafka Stack
  zookeeper:
    image: confluentinc/cp-zookeeper:5.0.0
    container_name: zookeeper
    ports:
      - 127.0.0.1:2181:2181
    hostname: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
#    tmpfs: "/datalog"
    networks:
      default:
        aliases:
          - zookeeper.internal

  kafka01.internal:
    image: confluentinc/cp-kafka:5.0.0
    container_name: kafka01
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 0
      KAFKA_ZOOKEEPER_CONNECT: zookeeper.internal:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka01.internal:9092
    healthcheck:
      test: ["CMD", "nc", "-zv", "localhost", "9092"]
      start_period: 10s
      interval: 5s
      timeout: 5s
      retries: 8

  kafka02.internal:
    image: confluentinc/cp-kafka:5.0.0
    container_name: kafka02
    depends_on:
      - zookeeper
    ports:
      - 9093:9093
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper.internal:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka02.internal:9093
    healthcheck:
      test: ["CMD", "nc", "-zv", "localhost", "9093"]
      start_period: 10s
      interval: 5s
      timeout: 5s
      retries: 8

  kafka03.internal:
    image: confluentinc/cp-kafka:5.0.0
    container_name: kafka03
    depends_on:
      - zookeeper
    ports:
      - 9094:9094
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper.internal:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka03.internal:9094
    healthcheck:
      test: ["CMD", "nc", "-zv", "localhost", "9094"]
      start_period: 10s
      interval: 5s
      timeout: 5s
      retries: 8

  kafka-connect:
    image: confluentinc/cp-kafka-connect-base:6.0.1
    container_name: kafka-connect
    ports:
      - 8083:8083
    volumes:
      - ./kafka-connect-exasol/jars:/etc/kafka-connect/jars
      - type: bind
        source: ./
        target: /resources
    environment:
      CONNECT_BOOTSTRAP_SERVERS: kafka01.internal:9092,kafka02.internal:9093,kafka03.internal:9094
      CONNECT_REST_ADVERTISED_PORT: 8083
      CONNECT_GROUP_ID: connect
      CONNECT_CONFIG_STORAGE_TOPIC: connect-config
      CONNECT_OFFSET_STORAGE_TOPIC: connect-offset
      CONNECT_STATUS_STORAGE_TOPIC: connect-status
      CONNECT_KEY_CONVERTER: io.confluent.connect.json.JsonSchemaConverter
      CONNECT_VALUE_CONVERTER: io.confluent.connect.json.JsonSchemaConverter
      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
      CONNECT_REST_ADVERTISED_HOST_NAME: "kafka-connect"
      # CONNECT_LOG4J_ROOT_LOGLEVEL: DEBUG
      CONNECT_PLUGIN_PATH: "/usr/share/java,/etc/kafka-connect/jars,/usr/share/confluent-hub-components,/data/connect-jars"
    depends_on:
      poc-exasol-db:
        condition: service_started
      mysql-db:
        condition: service_started
      kafka-manager:
        condition: service_started
      schema-registry:
        condition: service_healthy
    command: bash /resources/kafka-connect_commands.sh
    healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost:8083/"]
        start_period: 15s
        interval: 5s
        retries: 20

  kafka-manager:
    image: sheepkiller/kafka-manager
    container_name: kafka-manager
    ports:
      - 9000:9000
    hostname: kafka-manager.internal
    environment:
      ZK_HOSTS: zookeeper.internal:2181
      APPLICATION_SECRET: littlepig-letmein
      KM_VERSION: 1.3.3.17
    depends_on:
      zookeeper:
        condition: service_started
      kafka01.internal:
        condition: service_healthy
      kafka02.internal:
        condition: service_healthy
      kafka03.internal:
        condition: service_healthy

  schema-registry:
    image: confluentinc/cp-schema-registry:6.1.0
    hostname: 'schema_registry'
    container_name: schema-registry
    depends_on:
      zookeeper:
        condition: service_started
      kafka01.internal:
        condition: service_healthy
      kafka02.internal:
        condition: service_healthy
      kafka03.internal:
        condition: service_healthy
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: zookeeper:2181
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: kafka01.internal:9092,kafka02.internal:9093,kafka03.internal:9094
    ports:
      - 8082:8081
    healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost:8081/"]
        start_period: 15s
        interval: 5s
        retries: 8

  kafka-connect-ui:
    image: landoop/kafka-connect-ui:latest
    container_name: kafka-connect-ui
    hostname: kafka-connect-ui
    ports:
      - 8003:8000
    environment:
      CONNECT_URL: "http://kafka-connect:8083/"
      PROXY: "true"
    depends_on:
      kafka-connect:
        condition: service_healthy

  kowl:
    image: quay.io/cloudhut/kowl:v1.2.2
    container_name: kowl
    restart: on-failure
    hostname: kowl
    volumes:
     - ./kowl-config.yaml:/etc/kowl/config.yaml
    ports:
     - 8090:8080
    entrypoint: ./kowl --config.filepath=/etc/kowl/config.yaml
    depends_on:
      zookeeper:
        condition: service_started
      kafka-connect:
        condition: service_started

